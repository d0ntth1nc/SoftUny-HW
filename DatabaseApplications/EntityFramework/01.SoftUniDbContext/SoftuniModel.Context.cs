//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _01.SoftUniDbContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SoftUniEntities : DbContext
    {
        public SoftUniEntities()
            : base("name=SoftUniEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Town> Towns { get; set; }
    
        public virtual ObjectResult<usp_get_projects_of_employee_Result> usp_get_projects_of_employee(string firstName, string lastName)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_get_projects_of_employee_Result>("usp_get_projects_of_employee", firstNameParameter, lastNameParameter);
        }

        public dynamic[] GetProjectsByEmployee(string firstName, string lastName)
        {
            var projects = this.usp_get_projects_of_employee(firstName, lastName);
            return projects.Select(p =>
            {
                dynamic eo = new System.Dynamic.ExpandoObject();
                eo.Name = p.Name;
                eo.Description = p.Description;
                eo.StartDate = p.StartDate;
                return eo;
            }).ToArray();
        }
    }
}
